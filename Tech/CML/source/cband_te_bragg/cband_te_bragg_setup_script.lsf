##################################################################

# Copyright (c) 2003-2020, Ansys, Inc. All rights reserved.  

# Unauthorized use, distribution, or duplication is prohibited.  
# This product is subject to U.S. laws governing export and re-export.  

# For full Legal Notice, see documentation.

##################################################################

# In this example:
#    - Add the desired string for set-up script to the variable "setup_script"
#    - Use command "toscript" to add data required for setup to string 

setup_script=setup_script + toscript(stat_parameters) + toscript(width_data) + toscript(height_data) + toscript(neff) + toscript(ng) + toscript(width) + toscript(height);
setup_script = setup_script + "

# Waveguide width with stat_parameters
waveguide_width = width + delta_width;  # [m]
waveguide_height = height + delta_thickness;

#Find original neff and ng
ne1_0 = interp(neff, width_data, height_data, width, height);        # TE at 1550 nm
ng1_0 = interp(ng, width_data, height_data, width, height);      # TE at 1550 nm

#Find new neff and ng
ne1 = interp(neff, width_data,  height_data, waveguide_width, waveguide_height);         # TE at 1550 nm
ng1 = interp(ng, width_data,  height_data, waveguide_width, waveguide_height);        # TE at 1550 nm

temp = round(number_of_periods);
if (almostequal(number_of_periods,temp)!=1)
{
    msg = name + ': number_of_periods is not an integer. The model will round the number to the nearest integer: ' + num2str(temp) + '.';
    message(msg);
    number_of_periods = temp;
}

if (sinusoidal==0) {
    ? bragg_wavelength = (1550e-9 + (grating_period-317e-9)/317e-9*ne1/ng1*1550e-9) * ne1/ne1_0 - 1.9e2 * corrugation_width^2 - 0.0259 * corrugation_width - 1.0e-9; 
    kappa =  -1.53519e19 * corrugation_width^2+ 2.2751e12 * corrugation_width;
    ? kappa = kappa * cos(misalignment/grating_period*pi);
    
} else {   
    bragg_wavelength = (1550e-9 + (grating_period-317e-9)/317e-9*ne1/ng1*1550e-9) * ne1/ne1_0 - 6.7549e5 * corrugation_width^2 - 0.0399 * corrugation_width +  0.2e-9; 
    kappa = -3.7465e18 * corrugation_width^2+ 1.5555e12 * corrugation_width;  
    ? kappa = kappa * cos(misalignment/grating_period*pi);
}";

setup_script = setup_script + '
grating_length = grating_period * number_of_periods;
setnamed("WBG_1", "frequency", c/bragg_wavelength);
setnamed("WBG_1", "grating coupling coefficient", kappa);
setnamed("WBG_1", "length", grating_length);
setnamed("WBG_1", "group index 1", ng1);
setresult("BraggWavelength", bragg_wavelength);
setresult("kappa", kappa);';




    